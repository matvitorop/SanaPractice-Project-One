@model MVC_Practice.Models.Todo_Models.TodoListViewModel

@{
    ViewData["Title"] = "Todo List";

}

<h2 class="text-center mt-4">📝 ToDo List</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="container mt-4" style="max-width: 600px;">
    <form asp-action="AddTask" method="post" class="mb-4">
        <div class="form-group">
            <input type="text" name="Title" class="form-control form-control-lg" placeholder="Що треба зробити?" required/>
        </div>
        <div class="form-group mt-2">
            <input name="DueDate"
                   class="form-control"
                   type="datetime-local"
                   min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")"
                   />
        </div>
        <div class="form-group mt-2">
            <select name="CategoryId" class="form-control">
                <option value="">— Без категорії —</option>
                @foreach (var category in Model.Categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>
        </div>
        <div class="mt-3 text-end">
            <button type="submit" class="btn btn-primary">➕ Додати</button>
        </div>
    </form>

    <h4 class="mb-3">🟢 Активні завдання</h4>
    <ul class="list-group mb-4">
        @foreach (var task in Model.ActiveTasks)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                    <strong>@task.Title</strong>
                    @if (task.DueDate.HasValue)
                    {
                        <small class="text-muted ms-2">до @task.DueDate.Value</small>
                    }
                    @if (task.CategoryId.HasValue)
                    {
                        var category = Model.Categories.FirstOrDefault(c => c.Id == task.CategoryId);
                        if (category != null)
                        {
                            <span class="badge bg-info text-dark ms-2">@category.Name</span>
                        }
                    }
                </div>
                <form asp-action="CompleteTask" method="post" class="m-0">
                    <input type="hidden" name="id" value="@task.Id" />
                    <button type="submit" class="btn btn-success btn-sm">✔️</button>
                </form>
            </li>
        }
    </ul>

    <h4 class="mb-3">✅ Завершені</h4>
    <ul class="list-group">
        @foreach (var task in Model.CompletedTasks)
        {
            <li class="list-group-item text-muted" style="text-decoration: line-through;">
                <strong>@task.Title</strong>
                @if (task.CompletedDate.HasValue)
                {
                    <small class="ms-2">(виконано @task.CompletedDate.Value.ToShortDateString())</small>
                }
            </li>
        }
    </ul>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}